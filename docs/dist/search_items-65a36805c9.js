searchNodes=[{"doc":"A public API for managing accounts and making transactions.","ref":"GraphBanking.html","title":"GraphBanking","type":"module"},{"doc":"Gets a single account and associated transactions.Examplesiex&gt; get_account!(&quot;9b8dfc93-f59d-4de7-af60-57c535501ba9&quot;) %Account{ current_balance: 0.0, transactions_in: [], transactions_out: [], uuid: &quot;9b8dfc93-f59d-4de7-af60-57c535501ba9&quot; }","ref":"GraphBanking.html#get_account!/1","title":"GraphBanking.get_account!/1","type":"function"},{"doc":"Creates an account.Examplesiex&gt; new_account(%{current_balance: 10}) {:ok, %Account{ current_balance: 10.0, uuid: &quot;b92a8690-fb6e-425d-87f5-ea6ae16af83d&quot;, # ... }} iex&gt; new_account(%{current_balance: -10}) {:error, %Ecto.Changeset{}}","ref":"GraphBanking.html#new_account/1","title":"GraphBanking.new_account/1","type":"function"},{"doc":"Transfers the specified amount between the given accounts.In practice, this function creates a transaction data and updates the accounts. If the sender account doesn't have the specified amount, it will rollback the transaction and restore the database to the previous state.ExamplesLets start with a sender account, with an opening balance of 100.0, and an address account with 0.0.iex&gt; {:ok, sender} = new_account(%{current_balance: 100}) iex&gt; {:ok, address} = new_account(%{current_balance: 0})Now we transfer 30.0 from sender to address.iex&gt; transfer_money(sender.uuid, address.uuid, 30) # begin [] # INSERT INTO &quot;transactions&quot; ... # UPDATE &quot;accounts&quot; ... # UPDATE &quot;accounts&quot; ... # commit [] {:ok, %GraphBanking.Transaction{ address_uuid: &quot;3c11de5c-da6d-4a90-8d82-8432b1e4061f&quot;, amount: 30.0, sender_uuid: &quot;d5cb1878-9fd4-4adc-8a44-2af0035de952&quot;, uuid: &quot;d3020427-0b62-495e-b9f1-5d3160d77e84&quot;, when: ~U[2020-11-20 18:51:10Z], # ... }}If we check the current balance on both accounts we can see that it changed.iex&gt; get_account!(sender.uuid) %GraphBanking.Account{ current_balance: 70.0, uuid: &quot;d5cb1878-9fd4-4adc-8a44-2af0035de952&quot;, # ... } iex&gt; get_account!(address.uuid) %GraphBanking.Account{ current_balance: 30.0, uuid: &quot;3c11de5c-da6d-4a90-8d82-8432b1e4061f&quot;, # ... }We have now 70.0 on sender and 30.0 on address.If we try to transfer again, but now the amount of 100.0, we can see that it returns an error because sender has only 70.0 available on the account.iex&gt; transfer_money(sender.uuid, address.uuid, 100) # begin [] # INSERT INTO &quot;transactions&quot; ... # UPDATE &quot;accounts&quot; ... # UPDATE &quot;accounts&quot; ... # rollback [] {:error, [current_balance: &quot;can&#39;t be negative&quot;]}The error states that the account can't have a negative balance and this constraint triggers the transaction rollback.","ref":"GraphBanking.html#transfer_money/3","title":"GraphBanking.transfer_money/3","type":"function"},{"doc":"","ref":"GraphBanking.html#t:account/0","title":"GraphBanking.account/0","type":"type"},{"doc":"","ref":"GraphBanking.html#t:changeset/0","title":"GraphBanking.changeset/0","type":"type"},{"doc":"","ref":"GraphBanking.html#t:transaction/0","title":"GraphBanking.transaction/0","type":"type"},{"doc":"","ref":"GraphBanking.html#t:uuid/0","title":"GraphBanking.uuid/0","type":"type"},{"doc":"Module with named helpers generated from GraphBankingWeb.Router.","ref":"GraphBankingWeb.Router.Helpers.html","title":"GraphBankingWeb.Router.Helpers","type":"module"},{"doc":"Generates the path information including any necessary prefix.","ref":"GraphBankingWeb.Router.Helpers.html#path/2","title":"GraphBankingWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"GraphBankingWeb.Router.Helpers.html#static_integrity/2","title":"GraphBankingWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"GraphBankingWeb.Router.Helpers.html#static_path/2","title":"GraphBankingWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"GraphBankingWeb.Router.Helpers.html#static_url/2","title":"GraphBankingWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"GraphBankingWeb.Router.Helpers.html#url/1","title":"GraphBankingWeb.Router.Helpers.url/1","type":"function"},{"doc":"ContributingMake sure to have docker-compose installed.","ref":"contributing.html","title":"Contributing","type":"extras"},{"doc":"Enter the development container:git clone https://github.com/felipelincoln/graph-banking.git cd graph-banking/ docker-compose run --service-ports --rm web /bin/shCreate the database, run migrations and start the server:mix ecto.setup mix phx.serverAlternatively (when the database is already created), you can fast start the services:docker-compose up","ref":"contributing.html#running-the-application-locally","title":"Contributing - Running the application locally","type":"extras"},{"doc":"Good practice to run before making commits. It will mirror our GitHub action.Run the following inside the container:mix ciThis will run:mix format --check-formatted --dry-run mix credo --strict mix coveralls","ref":"contributing.html#test-pipeline","title":"Contributing - Test pipeline","type":"extras"},{"doc":"Run whenever your changes may cause documentation changes.Run the following inside the container:mix docs","ref":"contributing.html#building-documentation","title":"Contributing - Building documentation","type":"extras"}]